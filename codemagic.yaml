workflows:
  ios-workflow:
    name: iOS Workflow
    # instance_type: mac_mini
    max_build_duration: 120
    environment:
      groups:
          - firebase
          - ios_creds       
      vars:
        TEST2: $TEST
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: Runner          
        BUNDLE_ID: com.example.demoCodemagicSimulator # <-- Put your bundle id here dhfkdsf
      flutter: stable
      xcode: 13.1
      cocoapods: default
    scripts:
      - name: Cmod
        script: |
           chmod 0600 ~/.netrc 
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
          echo $TEST2
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_ADHOC --create
      - name: Use system default keychain
        script: |
          keychain add-certificates
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles --project=ios/Runner.xcodeproj
      - name: Get Flutter packages
        script: |
          cd . && flutter packages pub get
        ignore_failure: true          
      - name: Install pods
        script: |
          find . -name "Podfile" -execdir pod install \;
      - name: Flutter build ipa and automatic versioning
        script: |
          flutter build ipa --release \
          --build-name=1.0.0 \
          --build-number=$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_ID") + 1)) \
          --export-options-plist=/Users/builder/export_options.plist
#       - name: Test building
#         script: |
#            flutter build ios
#       - name: Zip Converting
#         script: |
#            zip --symlinks -r MyAppUITests.zip build/ios/ipa/nihal.ipa Runner.app 
#       - name: App upload and Set app id in environment variable.
#         script: |      
#           APP_URL=$(curl -u "nihalagazade_JxPH1i:4y5LkQnzzGkv2s7ERZ4q" -X POST "https://api-cloud.browserstack.com/app-automate/upload" -F "file=@build/ios/ipa/nihal.ipa" | jq -r '.app_url') 
#            echo $APP_URL

#           RESPONSE=$(curl -u "nihalagazade_JxPH1i:4y5LkQnzzGkv2s7ERZ4q" -X POST "https://api-cloud.browserstack.com/app-automate/xcuitest/test-suite" -F "file=@$FCI_BUILD_DIR/MyAppUITests.zip")
#            echo $RESPONSE

#           TEST_URL=$(echo $RESPONSE | jq -r '.test_url')
#            echo $TEST_URL
#           curl -X POST "https://api-cloud.browserstack.com/app-automate/xcuitest/build" -d "{\"devices\": [\"iPhone 11 Pro-13\"], "app": ""'"$APP_URL"'"", \"deviceLogs\" : \"true\", "testSuite": "'"$TEST_URL"'"}" -H "Content-Type: application/json" -u "nihalagazade_JxPH1i:4y5LkQnzzGkv2s7ERZ4q"    
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log 
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - ls $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
      
    publishing:
        firebase:
          firebase_token: $FIREBASE_TOKEN
          ios:
            app_id: 1:660347942537:ios:0e7fa39af0cac63aebb858  # Add your iOS app id retrieved from Firebase console
            groups: # Add one or more groups that you wish to distribute your iOS application to, you can create groups in the Firebase console
              - nihal
#         app_store_connect:
#           apple_id: nihal@nevercode.com
#           password: qwer-qwer-qwer-qwer

